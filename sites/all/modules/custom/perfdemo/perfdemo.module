<?php

function perfdemo_menu() {
  $items = array();
  
  $items['perfdemo'] = array(
    'title' => 'Performance Demo',
    'page callback' => 'perfdemo_page',
    'access arguments' => array('access content'),
  );
  
  return $items;
}

function perfdemo_page() {
  $start = microtime(TRUE);
  $count = 0;
  
  for($i = 0; $i < 5; $i++) {
    $count += count(perfdemo_load_all_hamsters());
  }
  
  return t('Loaded @count hamsters in @time seconds.', array('@count' => $count, '@time' => microtime(TRUE) - $start));
}

/**
 * Load all hamsters from the database and return them.
 */
function perfdemo_load_all_hamsters() {
  
  $hamster_list_cache = cache_get('perfdemo:hamsters:list');
  if (!empty($hamster_list_cache)) {
    $hamsters = $hamster_list_cache->data;
  }
  else {
    $hamsters = array();
    $ids = db_query("SELECT id FROM {hamster}")->fetchCol();
    foreach ($ids as $id) {
      $hamsters[] = perfdemo_hamster_load($id);
    }
    cache_set('perfdemo:hamsters:list', $hamsters);
  }

  
  return $hamsters;
}


/**
 * Hamster load function that has been designed to be slow.
 */
function perfdemo_hamster_load($id) {
  $hamsters = &drupal_static(__FUNCTION__);
  
  if (!isset($hamsters[$id])) {
    // Sleep for 100,000 microseconds = 0.1 seconds.
    usleep(100000);
  
    $hamsters[$id] = db_query("SELECT h.*, hh.name AS habitat_name FROM {hamster} h
                               LEFT JOIN {hamster_habitat} hh ON h.habitat_id = hh.id
                               WHERE h.id = :hamster_id", array(':hamster_id' => $id))->fetchObject();
  }
  
  return $hamsters[$id];
}