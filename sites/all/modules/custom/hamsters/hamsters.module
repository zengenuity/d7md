<?php


function hamsters_menu() {
  $items = array();
  
  $items['hamsters'] = array(
    'title' => 'Hamsters',
    'page callback' => 'hamsters_list',
    'access arguments' => array('view hamsters'),
  );
  
  $items['hamsters/%hamster'] = array(
    'title callback' => 'hamsters_page_title',
    'title arguments' => array(1),
    'page callback' => 'hamsters_page',
    'page arguments' => array(1),
    'access arguments' => array('view hamsters'),
  );
  
  $items['hamsters/insert'] = array(
    'title' => 'DB Insert',
    'page callback' => 'hamsters_insert',
    'access arguments' => array('edit hamsters'),
  );
  
  $items['hamsters/update'] = array(
    'title' => 'DB Update',
    'page callback' => 'hamsters_update',
    'access arguments' => array('edit hamsters'),
  );
  
  $items['hamsters/delete'] = array(
    'title' => 'DB Delete',
    'page callback' => 'hamsters_delete',
    'access arguments' => array('edit hamsters'),
  );
  
  $items['hamsters-oo'] = array(
    'title' => 'Hamsters',
    'page callback' => 'hamsters_oo_list',
    'access arguments' => array('view hamsters'),
  );
  
  $items['hamsters-oo/%'] = array(
    'title' => 'Hamsters',
    'page callback' => 'hamsters_oo_list',
    'page arguments' => array(1),
    'access arguments' => array('view hamsters'),
  );
  
  $items['hamsters-oo/insert'] = array(
    'title' => 'DB Insert',
    'page callback' => 'hamsters_oo_insert',
    'access arguments' => array('edit hamsters'),
  );
  
  $items['hamsters-oo/update'] = array(
    'title' => 'DB Update',
    'page callback' => 'hamsters_oo_update',
    'access arguments' => array('edit hamsters'),
  );
  
  $items['hamsters-oo/delete'] = array(
    'title' => 'DB Delete',
    'page callback' => 'hamsters_oo_delete',
    'access arguments' => array('edit hamsters'),
  );
  
  
  return $items;
}

function hamsters_oo_delete() {
  db_delete('hamsters')
    ->condition('name', 'Test')
    ->execute();
  
  return t('Deleted');
}


function hamsters_oo_update() {
  db_update('hamsters') 
    ->fields(array(
      'habitat_id' => 1,
    ))
    ->condition('name', 'Test', '=')
    ->execute();
  
  return t('Updated');
}

function hamsters_oo_insert() {
  db_insert('hamsters')
    ->fields(array(
      'name' => 'Test',
      'gender' => 'male',
      'weight' => 150,
      'birthdate' => REQUEST_TIME,
      'image' => '',
      'habitat_id' => 3,
  ))
  ->execute();

  return t('Done');
}

function hamsters_oo_list($gender = NULL) {
  $output = '';
  $header = array(
    t('ID'),
    t('Name'),
    t('Gender'),
    t('Weight'),
    t('Birth Date'),
    t('Image'),
    t('Habitat'),
  );
  $rows = array();
  
  $query = db_select('hamsters', 'h');
  $query->join('hamsters_habitat', 'hh', 'h.habitat_id = hh.id');
  $query->fields('h');
  $query->addField('hh', 'name', 'habitat_name');
  $query->orderBy('h.id');
  $query = $query->extend('PagerDefault')->limit(10);
  
  if (!empty($gender)) {
    $query->condition('h.gender', $gender, '=');
  }
  
  $results = $query->execute();
  
  foreach ($results as $record) {
    $row = array(
      $record->id,
      l($record->name, 'hamsters/' . $record->id),
      $record->gender,
      t('@weight g', array('@weight' => $record->weight)),
      format_date($record->birthdate, 'custom', 'm/d/Y'),
      !empty($record->image) ? theme('image_style', array('path' => file_build_uri($record->image), 'style_name' => 'thumbnail')) : '&nbsp',
      $record->habitat_name,
    );
    $rows[] = $row;
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  $output .= theme('pager');
  
  
  return $output;
}

function hamsters_delete() {
  db_query("DELETE FROM {hamsters} WHERE name = :name", 
    array(
      ':name' => 'Test',
    )
  );
  return t('Deleted');
}


function hamsters_update() {
  db_query("UPDATE {hamsters} SET habitat_id = :habitat WHERE name = :name", 
    array(
      ':name' => 'Test',
      ':habitat' => 1,
    )
  );
  return t('Updated');
}

function hamsters_insert() {
  db_query("INSERT INTO {hamsters} (name, gender, weight, birthdate, image, habitat_id) 
            VALUES (:name, :gender, :weight, :birth, :image, :habitat)", 
    array(
      ':name' => 'Test',
      ':gender' => 'male',
      ':weight' => 150,
      ':birth' => REQUEST_TIME,
      ':image' => '',
      ':habitat' => 3,
    )
  );
  return t('Done');
}

function hamsters_theme() {
  return array(
    'hamster_info' => array(
      'variables' => array('hamster' => NULL),
    ),
  );
}

function theme_hamster_info($variables) {
  $hamster = $variables['hamster'];
  
  drupal_add_css(drupal_get_path('module', 'hamsters') . '/hamsters.css');
  $output = '<div class="hamster-page">';
  
  if (!empty($hamster->image)) {
    $output .= '<div>' . theme('image_style', array('path' => file_build_uri($hamster->image), 'style_name' => 'large')) . '</div>';
  }
  $output .= '<div><label class="inline">' . t('ID') . ':</label>' . $hamster->id . '</div>';
  $output .= '<div><label class="inline">' . t('Gender') . ':</label>' . $hamster->gender . '</div>';
  $output .= '<div><label class="inline">' . t('Weight') . ':</label>' . t('@weight g', array('@weight' => $hamster->weight)). '</div>';
  $output .= '<div><label class="inline">' . t('Birth Date') . ':</label>' . format_date($hamster->birthdate, 'custom', 'm/d/Y'). '</div>';
  $age = REQUEST_TIME - $hamster->birthdate;
  $output .= '<div><label class="inline">' . t('Age') . ':</label>' . format_interval($age, 2) . '</div>';
  $output .= '<div><label class="inline">' . t('Habitat') . ':</label>' . $hamster->habitat_name . '</div>';
  
  $output .= '</div>';
  return $output;
}

function hamsters_page($hamster) {
  return theme('hamster_info', array('hamster' => $hamster));
}

function hamsters_page_title($hamster) {
  return $hamster->name;
}

function hamster_load($id) {
  return db_query("SELECT h.*, hh.name as habitat_name FROM {hamsters} h
                   LEFT JOIN {hamsters_habitat} hh ON h.habitat_id = hh.id
                   WHERE h.id = :hamster_id", array(':hamster_id' => $id))->fetchObject();
}

function hamsters_list() {
  $output = '';
  $header = array(
    t('ID'),
    t('Name'),
    t('Gender'),
    t('Weight'),
    t('Birth Date'),
    t('Image'),
    t('Habitat'),
  );
  $rows = array();
  $per_page = 10;
  $total = db_query("SELECT COUNT(*) FROM {hamsters}")->fetchField();
  $page = pager_default_initialize($total, $per_page);
  $results = db_query_range("SELECT h.*, hh.name as habitat_name FROM {hamsters} h
                       LEFT JOIN {hamsters_habitat} hh ON h.habitat_id = hh.id", $page * $per_page, $per_page);
  
  foreach ($results as $record) {
    $row = array(
      $record->id,
      l($record->name, 'hamsters/' . $record->id),
      $record->gender,
      t('@weight g', array('@weight' => $record->weight)),
      format_date($record->birthdate, 'custom', 'm/d/Y'),
      !empty($record->image) ? theme('image_style', array('path' => file_build_uri($record->image), 'style_name' => 'thumbnail')) : '&nbsp',
      $record->habitat_name,
    );
    $rows[] = $row;
  }
  $output .= theme('table', array('header' => $header, 'rows' => $rows));
  $output .= theme('pager');
  
  
  return $output;
}

function hamsters_permission() {
  return array(
    'view hamsters' => array(
      'title' => t('View Hamsters'),
      'description' => t('View information about hamsters in the database.'),
    ),
    'edit hamsters' => array(
      'title' => t('Edit Hamsters'),
      'description' => t('Edit information about hamsters in the database.'),
    ),
  );
}